-- Database generated with pgModeler (PostgreSQL Database Modeler).
-- pgModeler version: 1.0.1
-- PostgreSQL version: 15.0
-- Project Site: pgmodeler.io
-- Model Author: ---

-- Database creation must be performed outside a multi lined SQL file. 
-- These commands were put in this file only as a convenience.
-- 
-- object: new_database | type: DATABASE --
-- DROP DATABASE IF EXISTS new_database;
CREATE DATABASE new_database;
-- ddl-end --


-- object: public.association | type: TABLE --
-- DROP TABLE IF EXISTS public.association CASCADE;
CREATE TABLE public.association (
	asc_id smallint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 32767 START WITH 1 CACHE 1 ),
	type varchar,
	CONSTRAINT association_pk PRIMARY KEY (asc_id)
);
-- ddl-end --
ALTER TABLE public.association OWNER TO postgres;
-- ddl-end --

-- object: public.company | type: TABLE --
-- DROP TABLE IF EXISTS public.company CASCADE;
CREATE TABLE public.company (
	company_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 32767 START WITH 1 CACHE 1 ),
	name smallint,
	email smallint,
	phone smallint,
	date_founded smallint,
	date_ended smallint,
	"co-owned-with" smallint,
	"co-owned-with-too" smallint

);
-- ddl-end --
ALTER TABLE public.company OWNER TO postgres;
-- ddl-end --

-- object: public.device | type: TABLE --
-- DROP TABLE IF EXISTS public.device CASCADE;
CREATE TABLE public.device (
	device_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 32767 START WITH 1 CACHE 1 ),
	model_id smallint,
	manufacturer_id smallint,
	category_id smallint,
	serial_id smallint,
	name smallint,
	warranty_id smallint,
	location_id smallint,
	device_type_id smallint,
	did_id smallint,
	sip_id smallint,
	CONSTRAINT device_pk PRIMARY KEY (device_id)
);
-- ddl-end --
ALTER TABLE public.device OWNER TO postgres;
-- ddl-end --

-- object: public.device_type | type: TABLE --
-- DROP TABLE IF EXISTS public.device_type CASCADE;
CREATE TABLE public.device_type (
	device_type_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 2147483647 START WITH 1 CACHE 1 ),
	category_id smallint,
	device_type smallint,
	CONSTRAINT device_type_pk PRIMARY KEY (device_type_id)
);
-- ddl-end --
ALTER TABLE public.device_type OWNER TO postgres;
-- ddl-end --

-- object: public.did | type: TABLE --
-- DROP TABLE IF EXISTS public.did CASCADE;
CREATE TABLE public.did (
	did_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 2147483647 START WITH 1 CACHE 1 ),
	did_no smallint,
	sip_id smallint,
	CONSTRAINT did_pk PRIMARY KEY (did_id)
);
-- ddl-end --
ALTER TABLE public.did OWNER TO postgres;
-- ddl-end --

-- object: public.location | type: TABLE --
-- DROP TABLE IF EXISTS public.location CASCADE;
CREATE TABLE public.location (
	location_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 32767 START WITH 1 CACHE 1 ),
	address smallint,
	address_two smallint,
	city smallint,
	state smallint,
	lat smallint,
	long smallint,
	company_id smallint,
	CONSTRAINT location_pk PRIMARY KEY (location_id)
);
-- ddl-end --
ALTER TABLE public.location OWNER TO postgres;
-- ddl-end --

-- object: public.manufacturer | type: TABLE --
-- DROP TABLE IF EXISTS public.manufacturer CASCADE;
CREATE TABLE public.manufacturer (
	manufacturer_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 32767 START WITH 1 CACHE 1 ),
	name smallint,
	CONSTRAINT manufacturer_pk PRIMARY KEY (manufacturer_id)
);
-- ddl-end --
ALTER TABLE public.manufacturer OWNER TO postgres;
-- ddl-end --

-- object: public.model | type: TABLE --
-- DROP TABLE IF EXISTS public.model CASCADE;
CREATE TABLE public.model (
	model_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ,
	name smallint,
	CONSTRAINT model_pk PRIMARY KEY (model_id)
);
-- ddl-end --
ALTER TABLE public.model OWNER TO postgres;
-- ddl-end --

-- object: public.person | type: TABLE --
-- DROP TABLE IF EXISTS public.person CASCADE;
CREATE TABLE public.person (
	person_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 32767 START WITH 1 CACHE 1 ),
	company_id smallint NOT NULL,
	location_id smallint,
	phone_id smallint,
	asc_id smallint,
	CONSTRAINT person_pk PRIMARY KEY (person_id)
);
-- ddl-end --
ALTER TABLE public.person OWNER TO postgres;
-- ddl-end --

-- object: public.serial | type: TABLE --
-- DROP TABLE IF EXISTS public.serial CASCADE;
CREATE TABLE public.serial (
	serial_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 32767 START WITH 1 CACHE 1 ),
	serial_no smallint,
	CONSTRAINT serial_pk PRIMARY KEY (serial_id)
);
-- ddl-end --
ALTER TABLE public.serial OWNER TO postgres;
-- ddl-end --

-- object: public.sip | type: TABLE --
-- DROP TABLE IF EXISTS public.sip CASCADE;
CREATE TABLE public.sip (
	sip_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 32767 START WITH 1 CACHE 1 ),
	sip_no smallint,
	CONSTRAINT sip_pk PRIMARY KEY (sip_id)
);
-- ddl-end --
ALTER TABLE public.sip OWNER TO postgres;
-- ddl-end --

-- object: public.warranty | type: TABLE --
-- DROP TABLE IF EXISTS public.warranty CASCADE;
CREATE TABLE public.warranty (
	warranty_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 2147483647 START WITH 1 CACHE 1 ),
	"date-start" smallint,
	"date-end" smallint,
	manufacturer_id smallint,
	warranty_type varchar,
	CONSTRAINT warranty_pk PRIMARY KEY (warranty_id)
);
-- ddl-end --
ALTER TABLE public.warranty OWNER TO postgres;
-- ddl-end --

-- object: public.person_device_list | type: TABLE --
-- DROP TABLE IF EXISTS public.person_device_list CASCADE;
CREATE TABLE public.person_device_list (
	person_id smallint,
	company_id smallint,
	device_list_id smallint

);
-- ddl-end --
ALTER TABLE public.person_device_list OWNER TO postgres;
-- ddl-end --

-- object: public.company_device_list | type: TABLE --
-- DROP TABLE IF EXISTS public.company_device_list CASCADE;
CREATE TABLE public.company_device_list (
	device_list_id smallint,
	company_id smallint,
	company_device_list_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 2147483647 START WITH 1 CACHE 1 ),
	CONSTRAINT company_device_list_pk PRIMARY KEY (company_device_list_id)
);
-- ddl-end --
ALTER TABLE public.company_device_list OWNER TO postgres;
-- ddl-end --

-- object: public.device_list | type: TABLE --
-- DROP TABLE IF EXISTS public.device_list CASCADE;
CREATE TABLE public.device_list (
	person_id smallint,
	device_list_id smallint NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT BY 1 MINVALUE 0 MAXVALUE 2147483647 START WITH 1 CACHE 1 )

);
-- ddl-end --
ALTER TABLE public.device_list OWNER TO postgres;
-- ddl-end --

-- object: model_id | type: CONSTRAINT --
-- ALTER TABLE public.device DROP CONSTRAINT IF EXISTS model_id CASCADE;
ALTER TABLE public.device ADD CONSTRAINT model_id FOREIGN KEY (model_id)
REFERENCES public.model (model_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: manufacturer_id | type: CONSTRAINT --
-- ALTER TABLE public.device DROP CONSTRAINT IF EXISTS manufacturer_id CASCADE;
ALTER TABLE public.device ADD CONSTRAINT manufacturer_id FOREIGN KEY (manufacturer_id)
REFERENCES public.manufacturer (manufacturer_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: serial_id | type: CONSTRAINT --
-- ALTER TABLE public.device DROP CONSTRAINT IF EXISTS serial_id CASCADE;
ALTER TABLE public.device ADD CONSTRAINT serial_id FOREIGN KEY (serial_id)
REFERENCES public.serial (serial_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: device_type_id | type: CONSTRAINT --
-- ALTER TABLE public.device DROP CONSTRAINT IF EXISTS device_type_id CASCADE;
ALTER TABLE public.device ADD CONSTRAINT device_type_id FOREIGN KEY (device_type_id)
REFERENCES public.device_type (device_type_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: warranty_id | type: CONSTRAINT --
-- ALTER TABLE public.device DROP CONSTRAINT IF EXISTS warranty_id CASCADE;
ALTER TABLE public.device ADD CONSTRAINT warranty_id FOREIGN KEY (warranty_id)
REFERENCES public.warranty (warranty_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: location_id | type: CONSTRAINT --
-- ALTER TABLE public.device DROP CONSTRAINT IF EXISTS location_id CASCADE;
ALTER TABLE public.device ADD CONSTRAINT location_id FOREIGN KEY (location_id)
REFERENCES public.location (location_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: did_id | type: CONSTRAINT --
-- ALTER TABLE public.device DROP CONSTRAINT IF EXISTS did_id CASCADE;
ALTER TABLE public.device ADD CONSTRAINT did_id FOREIGN KEY (did_id)
REFERENCES public.did (did_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: sip_id | type: CONSTRAINT --
-- ALTER TABLE public.device DROP CONSTRAINT IF EXISTS sip_id CASCADE;
ALTER TABLE public.device ADD CONSTRAINT sip_id FOREIGN KEY (sip_id)
REFERENCES public.sip (sip_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: sip_id | type: CONSTRAINT --
-- ALTER TABLE public.did DROP CONSTRAINT IF EXISTS sip_id CASCADE;
ALTER TABLE public.did ADD CONSTRAINT sip_id FOREIGN KEY (sip_id)
REFERENCES public.sip (sip_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: company_id | type: CONSTRAINT --
-- ALTER TABLE public.location DROP CONSTRAINT IF EXISTS company_id CASCADE;
ALTER TABLE public.location ADD CONSTRAINT company_id FOREIGN KEY (company_id)
REFERENCES public.company (company_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: asc_id | type: CONSTRAINT --
-- ALTER TABLE public.person DROP CONSTRAINT IF EXISTS asc_id CASCADE;
ALTER TABLE public.person ADD CONSTRAINT asc_id FOREIGN KEY (asc_id)
REFERENCES public.association (asc_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: company_id | type: CONSTRAINT --
-- ALTER TABLE public.person DROP CONSTRAINT IF EXISTS company_id CASCADE;
ALTER TABLE public.person ADD CONSTRAINT company_id FOREIGN KEY (company_id)
REFERENCES public.company (company_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: location_id | type: CONSTRAINT --
-- ALTER TABLE public.person DROP CONSTRAINT IF EXISTS location_id CASCADE;
ALTER TABLE public.person ADD CONSTRAINT location_id FOREIGN KEY (location_id)
REFERENCES public.location (location_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: person_id | type: CONSTRAINT --
-- ALTER TABLE public.person_device_list DROP CONSTRAINT IF EXISTS person_id CASCADE;
ALTER TABLE public.person_device_list ADD CONSTRAINT person_id FOREIGN KEY (person_id)
REFERENCES public.person (person_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: company_id | type: CONSTRAINT --
-- ALTER TABLE public.person_device_list DROP CONSTRAINT IF EXISTS company_id CASCADE;
ALTER TABLE public.person_device_list ADD CONSTRAINT company_id FOREIGN KEY (company_id)
REFERENCES public.company (company_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: device_list_id | type: CONSTRAINT --
-- ALTER TABLE public.company_device_list DROP CONSTRAINT IF EXISTS device_list_id CASCADE;
ALTER TABLE public.company_device_list ADD CONSTRAINT device_list_id FOREIGN KEY (device_list_id)
REFERENCES public.device_list (device_list_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: company_id | type: CONSTRAINT --
-- ALTER TABLE public.company_device_list DROP CONSTRAINT IF EXISTS company_id CASCADE;
ALTER TABLE public.company_device_list ADD CONSTRAINT company_id FOREIGN KEY (company_id)
REFERENCES public.company (company_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: person_id | type: CONSTRAINT --
-- ALTER TABLE public.device_list DROP CONSTRAINT IF EXISTS person_id CASCADE;
ALTER TABLE public.device_list ADD CONSTRAINT person_id FOREIGN KEY (person_id)
REFERENCES public.person (person_id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --


